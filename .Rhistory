geom_histogram( aes(x = x2, y = ..count..),
binwidth = 1, color="black", fill= "green", alpha=0.5) +
scale_x_continuous(name = "GCA Pre/Post Score",
limits=c(0, 25)) +
scale_y_continuous(name = "Count") +
ggtitle("Class 1 Fall 2015 GCA Pre and Post Scores")
print(g2)
library(ggplot2)
library(RColorBrewer)
df <-  data.frame(x = cl1f15$Pre_tot, x2 = cl1f15$Post_tot)
g <-  ggplot(df, aes(x)) + geom_histogram(aes(x = x, y = ..count..),
binwidth = 1, color="black", fill="blue", alpha=0.5) +
geom_histogram( aes(x = x2, y = ..-count..),
binwidth = 1, color="black", fill= "green", alpha=0.5) +
scale_x_continuous(name = "GCA Pre/Post Score",
limits=c(0, 25)) +
scale_y_continuous(name = "Count") +
ggtitle("Class 1 Fall 2015 GCA Pre and Post Scores")
print(g)
library(ggplot2)
library(RColorBrewer)
df <-  data.frame(x = cl1f15$Pre_tot, x2 = cl1f15$Post_tot)
g <-  ggplot(df, aes(x)) + geom_histogram(aes(x = x, y = ..count..),
binwidth = 1, color="black", fill="blue", alpha=0.5) +
geom_histogram( aes(x = x2, y = ..-count..),
binwidth = 1, color="black", fill= "green", alpha=0.5) +
scale_x_continuous(name = "GCA Pre/Post Score",
limits=c(0, 25)) +
scale_y_continuous(name = "Count") +
ggtitle("Class 1 Fall 2015 GCA Pre and Post Scores")
print(g)
library(ggplot2)
library(RColorBrewer)
df <-  data.frame(x = cl1f15$Pre_tot, x2 = cl1f15$Post_tot)
g <-  ggplot(df, aes(x)) + geom_histogram(aes(x = x, y = ..count..),
binwidth = 1, color="black", fill="blue", alpha=0.5) +
geom_histogram( aes(x = x2, y = -..count..),
binwidth = 1, color="black", fill= "green", alpha=0.5) +
scale_x_continuous(name = "GCA Pre/Post Score",
limits=c(0, 25)) +
scale_y_continuous(name = "Count") +
ggtitle("Class 1 Fall 2015 GCA Pre and Post Scores")
print(g)
g <-  ggplot(df, aes(x)) + geom_histogram(aes(x = x, y = ..count..),
binwidth = 1, color="black", fill="blue", alpha=0.5) +
geom_histogram( aes(x = x2, y = -..count..),
binwidth = 1, color="black", fill= "green", alpha=0.5) +
scale_x_continuous(name = "GCA Pre/Post Score",
limits=c(0, 25)) +
scale_y_continuous(name = "Count") +
ggtitle("Class 1 Fall 2015 GCA Pre and Post Scores")
print(g)
g2 <-  ggplot(df, aes(x)) + geom_histogram(aes(x = x, y = ..count..),
binwidth = 1, color="black", fill="blue", alpha=0.5) +
geom_histogram( aes(x = x2, y = ..count..),
binwidth = 1, color="black", fill= "green", alpha=0.5) +
scale_x_continuous(name = "GCA Pre/Post Score",
limits=c(0, 25)) +
scale_y_continuous(name = "Count") +
ggtitle("Class 1 Fall 2015 GCA Pre and Post Scores")
print(g2)
library(dplyr)
cl1f15 <- filter(GCA_prepost, Semester=="Fa2015", cl==1)
cl1f15_ES <- (mean(cl1f15$Post_tot, na.rm = TRUE) - mean(cl1f15$Pre_tot, na.rm = TRUE))/sd(cl1f15$Pre_tot, na.rm = TRUE)
cl1f15_g <- (mean(cl1f15$Post_tot, na.rm = TRUE) - mean(cl1f15$Pre_tot, na.rm = TRUE))/(25-mean(cl1f15$Pre_tot, na.rm = TRUE))
cl1f15gains <- c(cl1f15_ES, cl1f15_g)
print(cl1f15gains)
is.vector(cl1f15gains)
pre-norm1 <- ggplot(cl1f15, aes(Pre_tot, norm_gain))
library(ggplot2)
pre-norm1 <- ggplot(cl1f15, aes(Pre_tot, norm_gain))
prenorm1 <- ggplot(cl1f15, aes(Pre_tot, norm_gain))
prenorm1
prenorm1 <- ggplot(cl1f15, aes(Pre_tot, norm_gain))
print(prenorm1)
prenorm1 <- ggplot(cl1f15, aes(Pre_tot, norm_gain),
scale_x_continuous(name = "Pre-test score", limits=c(0, 25)) +
scale_y_continuous(name = "<g>", limits=c(-1, 1)) +
ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
prenorm1 <- ggplot(cl1f15, aes(Pre_tot, norm_gain),
scale_x_continuous(name = "Pre-test score", limits=c(0, 25)) +
scale_y_continuous(name = "<g>", limits=c(-1, 1)) +
ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
df2 <-  (x = cl1f15$Pre_tot, x2 = cl1f15$norm_gain)
prenorm1 <- ggplot(df2, aes(x, x2),
scale_x_continuous(name = "Pre-test score", limits=c(0, 25)) +
scale_y_continuous(name = "<g>", limits=c(-1, 1)) +
ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
df2 <-  data.frame(x = cl1f15$Pre_tot, x2 = cl1f15$norm_gain)
prenorm1 <- ggplot(df2, aes(x, x2),
scale_x_continuous(name = "Pre-test score", limits=c(0, 25)) +
scale_y_continuous(name = "<g>", limits=c(-1, 1)) +
ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
prenorm1 <- ggplot(df2, aes(x = x, y = x2),
scale_x_continuous(name = "Pre-test score", limits=c(0, 25)) +
scale_y_continuous(name = "<g>", limits=c(-1, 1)) +
ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
View(df2)
View(df2)
remove(df2)
df2 <-  data.frame(x = cl1f15$Pre_tot, y = cl1f15$norm_gain)
View(df2)
remove(df2)
df2 <-  data.frame(c(cl1f15$Pre_tot, cl1f15$norm_gain))
View(df2)
remove(df2)
prenorm1 <- ggplot(cl1f15, aes(x = Pre_tot, y = norm_gain) + geom_point(
scale_x_continuous(name = "Pre-test score", limits=c(0, 25)) +
scale_y_continuous(name = "<g>", limits=c(-1, 1)) +
ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score")))
print(prenorm1)
prenorm1 <- ggplot(cl1f15, aes(x = Pre_tot, y = norm_gain) +
geom_point(ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score")))
print(prenorm1)
prenorm1 <- ggplot(cl1f15, aes(x = Pre_tot, y = norm_gain)) +
geom_point(shape = 1) +
(ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
prenorm1 <- ggplot(cl1f15, aes(x = Pre_tot, y = norm_gain)) +
geom_point(shape = 1) + geom_smooth(method = lm) +
(ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
prenorm1 <- ggplot(cl1f15, aes(x = Pre_tot, y = norm_gain)) +
geom_point(shape = 1) + geom_smooth(method = lm, color = "darkred", fill = "blue") +
(ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
norm1 <- ggplot(cl1f15, aes(x = Pre_tot, y = norm_gain)) +
geom_point(shape = 1) + geom_smooth(method = lm, formula = y~x, color = "darkred", fill = "blue") +
(ggtitle("Class 1 Fall 2015 Individual <g> vs Pre-test score"))
print(prenorm1)
reg1 <- lm(norm_gain~Pre_tot, data = cl1f15)
summary(reg1)
is.numeric(cl1f15$norm_gain)
as.numeric(cl1f15$norm_gain)
normchange <- function(pre, post)
{
if (post>pre)
{(post-pre)/(100-pre)}
else
{if (post&pre=100 | 0)
{NA}
else
{if (post=pre)
{0}
else
{if (post>pre)
{(post-pre)/pre}}}}
}
normchange <- function(pre, post)
{
if (post>pre)
{(post-pre)/(100-pre)}
else
{if (post&pre == 100 | 0)
{NA}
else
{if (post == pre)
{0}
else
{if (post>pre)
{(post-pre)/pre}}}}
}
#calculate GCA pre and post %ages and normalized change c for each student, append vars to data frame
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)
GCA_prepost&norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)
GCA_prepost$norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)*100
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)*100
GCA_prepost$norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
normchange <- function(pre, post)
{
if (post>pre)
{(post-pre)/(100-pre)}
else
{if (post == 100 | 0 & pre == 100 | 0)
{NA}
else
{if (post == pre)
{0}
else
{if (post>pre)
{(post-pre)/pre}}}}
}
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)*100
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)*100
GCA_prepost$norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
normchange <- function(pre, post)
{
if (post>pre)
{(post-pre)/(100-pre)}
else
{if (post == 100 | post == 0 & pre == 100 | pre == 00)
{NA}
else
{if (post == pre)
{0}
else
{if (post>pre)
{(post-pre)/pre}}}}
}
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)*100
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)*100
GCA_prepost$norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
normchange <- function(pre, post)
{
if (post>pre)
{(post-pre)/(100-pre)}
else
{if (post == 100 | post == 0 & pre == 100 | pre == 00)
{NA}}
else
{if (post == pre)
{0}}
else
{if (post>pre)
{(post-pre)/pre}
}}
normchange <- function(pre, post)
{
if (post>pre)
{(post-pre)/(100-pre)}
else
{if (post == 100 | post == 0 & pre == 100 | pre == 00)
{NA}
else
{if (post == pre)
{0}
else
{if (post>pre)
{(post-pre)/pre}
}}}
}
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)*100
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)*100
GCA_prepost$norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
normchange <- function(x, y)
{
if (y>x)
{(y-x)/(100-x)}
else
{if (y == 100 | y == 0 & x == 100 | x == 00)
{NA}
else
{if (y == x)
{0}
else
{if (y>x)
{(y-x)/x}
}}}
}
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)*100
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)*100
GCA_prepost$norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
<<<<<<< HEAD
GCA_prepost <- subset(FSF_alldata, select=c(StudentID, Semester, cl, Pre1:Post25, Sex:Demo4White5))
str(GCA_prepost)
library(psych)
29+25
head(GAC_prepost[29:54])
head(GCA_prepost[29:54])
str(GCA_prepost[29:53])
d<-GCA_prepost[29:53]
cm<-cor(d)
ev <- eigen(cm)
cm
cm<-cor(d,na.rm=T)
?cor
cm<-cor(d,ev <- eigen(R))
ev <- eigen(cm)
cm<-cor(d,use="everything")
ev <- eigen(cm)
cm
summary(d)
str(d)
cm<-cor(d,use="complete.obs")
cm
ev <- eigen(cm)
ev
fa.parallel(cm, n.obs = nrow(d), fm="minres", fa="both",
main = "Parallel Analysis Scree Plots",
n.iter=100, error.bars=FALSE, SMC=FALSE,
ylabel=NULL, show.legend=TRUE)
fa.parallel(cm, n.obs = nrow(d), fm="minres", fa="both",
main = "Parallel Analysis Scree Plots",
n.iter=100, error.bars=FALSE, SMC=FALSE,
ylabel=NULL, show.legend=TRUE)
?fa
mod1<-fa(d,n.factors=4,rotate="Promax",fm="minres",cor="tet")
print(mod1,cut=.3)
mod1<-fa(d,nfactors=4,rotate="Promax",fm="minres",cor="tet")
print(mod1,cut=.3)
alpha(d)
?alpha
?alpha
alpha(d,na.rm=T)
str(d)
df<-as.data.frame(d)
str(df)
=======
normchange <- function(x, y)
{
if (y>x)
{(y-x)/(100-x)}
else
{if (y == 100 | y == 0 & x == 100 | x == 00)
{NA}
else
{if (y == x)
{0}
else
{if (y<x)
{(y-x)/x}
}}}
}
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)*100
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)*100
GCA_prepost$norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
normchange <- function(x, y)
{
if (y>x)
{(y-x)/(100-x)}
else
{if (y & x == 100 | y & x == 0)
{NA}
else
{if (y = x)
{0}
else
{if (y<x)
{(y-x)/x}
}}}
}
normchange <- function(x, y)
{
if (y>x)
{(y-x)/(100-x)}
else
{if (y & x == 100 | y & x == 0)
{NA}
else
{if (y == x)
{0}
else
{if (y<x)
{(y-x)/x}
}}}
}
#calculate GCA pre and post %ages and normalized change c for each student, append vars to data frame
GCA_prepost$Pre_perc <- (GCA_prepost$Pre_tot/25)*100
GCA_prepost$Post_perc <- (GCA_prepost$Post_tot/25)*100
GCA_prepost$norm_c <- normchange(GCA_prepost$Pre_perc, GCA_prepost$Post_perc)
library(readr)
X1516GCA_FA <- read_csv("C:/Users/talbotr/Desktop/Keck/1516GCA_FA.csv")
View(X1516GCA_FA)
library("psych", lib.loc="~/R/win-library/3.3")
corPlot(X1516GCA_FA)
fa.parallel((X1516GCA_FA))
corPlot(X1516GCA_FA)
corPlot(X1516GCA_FA)
fa.parallel((X1516GCA_FA))
fa(X1516GCA_FA, nfactors = 6)
install.packages("GPArotation")
library(GPArotation)
fa(X1516GCA_FA, nfactors = 6)
scree(X1516GCA_FA, factors=TRUE)
fa(X1516GCA_FA, nfactors = 4)
install.packages("psych")
install.packages(c("ggplot2", "GPArotation"))
install.packages("dplyr")
library(psych)
principal(X1516GCA_FA, nfactors=4, rotate = "oblimin")
rincipal(X1516GCA_FA, nfactors=4, rotate = "none")
principal(X1516GCA_FA, nfactors=4, rotate = "none")
install.packages("rmarkdown")
summary(X1516GCA_FA)
tail(X1516GCA_FA)
nrow(X1516GCA_FA)
principal(X1516GCA_FA, nfactors=4, rotate = "varimax")
library("psych", lib.loc="~/R/win-library/3.4")
principal(X1516GCA_FA, nfactors=4, rotate = "varimax")
lowerCor(X1516GCA_FA)
corPlot(X1516GCA_FA)
colnames(X1516GCA_FA) <- c("GCA1", "GCA2", "GCA3", "GCA4", "GCA5", "GCA6", "GCA7", "GCA8", "GCA9", "GCA10", "GCA11", "GCA12", "GCA13", "GCA14", "GCA15", "GCA16", "GCA17", "GCA18", GCA19", "GCA20", "GCA21", "GCA22", "GCA23", "GCA24", "GCA25")
names(X1516GCA_FA) <- c("GCA1", "GCA2", "GCA3", "GCA4", "GCA5", "GCA6", "GCA7", "GCA8", "GCA9", "GCA10", "GCA11", "GCA12", "GCA13", "GCA14", "GCA15", "GCA16", "GCA17", "GCA18", GCA19", "GCA20", "GCA21", "GCA22", "GCA23", "GCA24", "GCA25")
names(X1516GCA_FA) <- c("GCA1", "GCA2", "GCA3", "GCA4", "GCA5", "GCA6", "GCA7", "GCA8", "GCA9", "GCA10", "GCA11", "GCA12", "GCA13", "GCA14", "GCA15", "GCA16", "GCA17", "GCA18", "GCA19", "GCA20", "GCA21", "GCA22", "GCA23", "GCA24", "GCA25")
X1516GCA_FA
View(X1516GCA_FA)
corPlot(X1516GCA_FA)
library(psych)
library(GPArotation)
corPlot(X1516GCA_FA)
library(psych)
library(GPArotation)
corPlot(X1516GCA_FA)
fa.parallel((X1516GCA_FA))
principal(X1516GCA_FA, nfactors=4, rotate = "varimax")
fa(X1516GCA_FA, nfactors = 4, rotation = "varimax")
fa(X1516GCA_FA, nfactors = 4, rotate = "varimax")
scree(X1516GCA_FA, factors=TRUE)
corPlot(X1516GCA_FA, numbers = "TRUE")
fa.parallel((X1516GCA_FA))
library(psych)
library(GPArotation)
corPlot(X1516GCA_FA)
View(X1516GCA_FA)
write.csv(X1516GCA_FA, file = "1516GCA.csv")
X1516GCA_FA <- read.csv(file = "1516GCA.csv", header = TRUE)
X1516GCA_FA <- read.csv(file = "1516GCA.csv", header = TRUE)
>>>>>>> 338777e9265ed21e2d3e3000b08a61de19858604
46+18
2.77*18+3.01*46/(64)
(2.77*18+3.01*46)/(64)
(2.61*30+2.58*41)/(71)
271.6-30.64
5.66+6.41
5.66+10.22
3693.16+30.64
2*2.95+3.8+.5+.65
20.55-10.85
26+9.7
58.35+7.54+25
42*.535
42*.535*2
90.89+39+17.25
90.89+39+17.25+19.4
90.89+39
17.25+19.4
90.89+39+17.25+19.4+22.47+22.47+121.5
1530-177
619-195-130
11*1250
install.packages("RealVAMS")
library(RealVAMS)
?RealVAMS
edit(RealVAMS())
edit(RealVAMS
)
str(example.score.data)
str(example.outcome.data)
unique(example.score.data$student)
length(unique(example.score.data$student))
str(example.outcome.data)
(example.outcome.data)
res1<-RealVAMS(example.score.data,example.outcome.data,persistence = "CP",school.effects = FALSE,REML=TRUE)
res$parameters
res1$parameters
res1<-RealVAMS(example.score.data, example.outcome.data, persistence = "CP",
school.effects = FALSE, REML = TRUE,
score.fixed.effects = formula(~as.factor(year)+cont\_var),
outcome.fixed.effects = formula(~1),
max.iter.EM = 10,
outcome.family = binomial(link = "probit"),
tol1 = 1e-07, max.PQL.it = 30,
pconv = .Machine$double.eps*1e9,
var.parm.hessian = TRUE,
verbose = TRUE)
res1<-RealVAMS(example.score.data, example.outcome.data, persistence = "CP",
school.effects = FALSE, REML = TRUE,
score.fixed.effects = formula(~as.factor(year)+cont\_var),
outcome.fixed.effects = formula(~1),
max.iter.EM = 10,
outcome.family = binomial(link = "probit"),
tol1 = 1e-07, max.PQL.it = 30,
pconv = .Machine$double.eps*1e9,
var.parm.hessian = TRUE,
verbose = TRUE)
res1<-RealVAMS(example.score.data, example.outcome.data, persistence = "CP",school.effects = FALSE, REML = TRUE,
score.fixed.effects = formula(~as.factor(year)+cont\_var),outcome.fixed.effects = formula(~1),
max.iter.EM = 10,outcome.family = binomial(link = "probit"),
tol1 = 1e-07, max.PQL.it = 30,pconv = .Machine$double.eps*1e9,
var.parm.hessian = TRUE,verbose = TRUE)
str(example.score.data)
res1<-RealVAMS(example.score.data, example.outcome.data, persistence = "CP",school.effects = FALSE, REML = TRUE,
score.fixed.effects = formula(~as.factor(year)+cont_var),outcome.fixed.effects = formula(~1),
max.iter.EM = 10,outcome.family = binomial(link = "probit"),
tol1 = 1e-07, max.PQL.it = 30,pconv = .Machine$double.eps*1e9,
var.parm.hessian = TRUE,verbose = TRUE)
res1$parameters
str(res1$teach.effects)
res1$teach.effects[1:4,]
res1$teach.effects[1:6,]
summary(res1)
summay(example.score.data)
summary(example.score.data)
res2<-RealVAMS(example.score.data, example.outcome.data, persistence = "VP",
school.effects = FALSE, REML = TRUE,
score.fixed.effects = formula(~as.factor(year)+cont_var),
outcome.fixed.effects = formula(~1),
max.iter.EM = 10,
outcome.family = binomial(link = "probit"),
tol1 = 1e-07, max.PQL.it = 30,
pconv = .Machine$double.eps*1e9,
var.parm.hessian = TRUE,
verbose = TRUE)
summary(res2)
int<-c(-.18,-.1,.01,-.01,-.07,.04,.05,-.14,-.16,-.08,.04,.06,-.01,.07,-.44,-.31,.02,-.05,.11)
diff<-c(-1.33,-.5,1.9,1.72,-.66,1.71,1.33,-.59,-1.05,-1.4,2,-1.81,-.91,2.34,.01,-2.52,-1.34,-3.1,-2.02)
cor(int,diff)
41*.535
31.25+29+(19.4/2)
62.56+(19.4/2)
21.9*2
72.26+69.95
17+31+43.8+142.21+401.96
